"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Clan = void 0;
const ChatLanguage_1 = require("./ChatLanguage");
const ClanMember_1 = require("./ClanMember");
const WarLeague_1 = require("./WarLeague");
const Location_1 = require("./Location");
const Label_1 = require("./Label");
const Badge_1 = require("./Badge");
const ClanCapital_1 = require("./ClanCapital");
/** Represents a Clan. */
class Clan {
    constructor(client, data) {
        this.client = client;
        this.name = data.name;
        this.tag = data.tag;
        this.type = data.type;
        this.description = data.description;
        this.location = data.location ? new Location_1.Location(data.location) : null;
        this.chatLanguage = data.chatLanguage ? new ChatLanguage_1.ChatLanguage(data.chatLanguage) : null;
        this.badge = new Badge_1.Badge(data.badgeUrls);
        this.level = data.clanLevel;
        this.points = data.clanPoints;
        this.versusPoints = data.clanVersusPoints;
        this.requiredTrophies = data.requiredTrophies;
        this.requiredTownHallLevel = data.requiredTownhallLevel ?? null;
        this.requiredVersusTrophies = data.requiredVersusTrophies ?? null;
        this.warFrequency = data.warFrequency;
        this.warWinStreak = data.warWinStreak;
        this.warWins = data.warWins;
        this.warTies = data.warTies ?? null;
        this.warLosses = data.warLosses ?? null;
        this.isWarLogPublic = data.isWarLogPublic;
        this.warLeague = data.warLeague ? new WarLeague_1.WarLeague(data.warLeague) : null;
        this.memberCount = data.members;
        this.labels = data.labels.map((label) => new Label_1.Label(label));
        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
        this.clanCapital = Object.keys(data.clanCapital ?? {}).length > 0 ? new ClanCapital_1.ClanCapital(data.clanCapital) : null;
        this.isFamilyFriendly = data.isFamilyFriendly;
        this.capitalPoints = data.clanCapitalPoints;
        this.capitalLeague = data.capitalLeague;
        this.members = data.memberList?.map((mem) => new ClanMember_1.ClanMember(this.client, mem)) ?? []; // eslint-disable-line
    }
    /** Get {@link Player} info for every Player in the clan. */
    async fetchMembers(options) {
        return (await Promise.allSettled(this.members.map((m) => this.client.getPlayer(m.tag, { ...options, ignoreRateLimit: true }))))
            .filter((res) => res.status === 'fulfilled')
            .map((res) => res.value);
    }
    /** Get clan's formatted link to open clan in-game. */
    get shareLink() {
        return `https://link.clashofclans.com/en?action=OpenClanProfile&tag=${this.tag.replace(/#/g, '')}`;
    }
}
exports.Clan = Clan;
