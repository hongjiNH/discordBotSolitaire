import { APIClanRanking, APIClanVersusRanking, APIPlayerRanking, APIPlayerVersusRanking } from '../types';
import { Client } from '../client/Client';
import { PlayerClan } from './PlayerClan';
import { Location } from './Location';
import { League } from './League';
import { Badge } from './Badge';
/** Represents the Player of seasonal legend league leader-board ranking. */
export declare class SeasonRankedPlayer {
    /** The player's name. */
    name: string;
    /** The player's tag. */
    tag: string;
    /** The player's experience level. */
    expLevel: number;
    /** The player's trophy count. */
    trophies: number;
    /** The player's attack wins. */
    attackWins: number;
    /** The player's defense wins. */
    defenseWins: number;
    /** The player's rank in the clan leader-board. */
    rank: number;
    /** The player's clan. */
    clan: PlayerClan | null;
    constructor(client: Client, data: Omit<APIPlayerRanking, 'league'>);
    /** Get player's formatted link to open player in-game. */
    get shareLink(): string;
}
/** Represents the Player of location based leader-board ranking. */
export declare class RankedPlayer {
    /** The player's name. */
    name: string;
    /** The player's tag. */
    tag: string;
    /** The player's experience level. */
    expLevel: number;
    /** The player's trophy count. If retrieving info for versus leader-boards, this will be `null`. */
    trophies: number | null;
    /** The player's attack wins. If retrieving info for versus leader-boards, this will be `null`. */
    attackWins: number | null;
    /** The player's defense wins. If retrieving info for versus leader-boards, this will be `null`. */
    defenseWins: number | null;
    /** The player's versus trophy count. If retrieving info for regular leader-boards, this will be `null`. */
    versusTrophies: number | null;
    /** The number of total versus attacks the player has won. If retrieving info for regular leader-boards, this will be `null`. */
    versusBattleWins: number | null;
    /** The player's rank in the clan leader-board. */
    rank: number;
    /** The player's rank before the last leader-board change. If retrieving info for legend league season, this will be `null`.  */
    previousRank: number | null;
    /** The player's clan. */
    clan: PlayerClan | null;
    /** The player's league. If retrieving info for versus leader-boards, this will be `null`. */
    league: League | null;
    constructor(client: Client, data: APIPlayerRanking | APIPlayerVersusRanking);
    /** Get player's formatted link to open player in-game. */
    get shareLink(): string;
}
/** Represents the Clan of location based leader-board ranking. */
export declare class RankedClan {
    /** The clan's name. */
    name: string;
    /** The clan's tag. */
    tag: string;
    /** The clan's level. */
    level: number;
    /** The clan's trophy count. If retrieving info for versus leader-boards, this will be `null`.  */
    points: number | null;
    /** The clan's versus trophy count. If retrieving info for regular leader boards, this will be `null`. */
    versusPoints: number | null;
    /** The clan's location. */
    location: Location;
    /** The number of members in the clan. */
    memberCount: number;
    /** The clan's rank in the leader board. */
    rank: number;
    /** The clan's rank in the previous season's leader-board. */
    previousRank: number;
    /** The clan's badge. */
    badge: Badge;
    constructor(data: APIClanRanking | APIClanVersusRanking);
    /** Get clan's formatted link to open clan in-game. */
    get shareLink(): string;
}
