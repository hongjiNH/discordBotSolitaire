import { APIClanMember, APIPlayerHouse, OverrideOptions } from '../types';
import { Client } from '../client/Client';
import { League } from './League';
export declare class ClanMember {
    client: Client;
    /** The member's name. */
    name: string;
    /** The member's tag. */
    tag: string;
    /** The member's role in the clan. */
    role: 'member' | 'elder' | 'coLeader' | 'leader';
    /** The member's experience level. */
    expLevel: number;
    /** The member's current League. */
    league: League;
    /** The member's trophy count. */
    trophies: number;
    /** The member's versus trophy count. */
    versusTrophies: number | null;
    /** The member's rank in the clan. */
    clanRank: number;
    /** The member's rank before the last leader-board change. */
    previousClanRank: number;
    /** The member's donation count for this season. */
    donations: number;
    /** The member's donation received count for this season. */
    received: number;
    /** The member's player house details. */
    playerHouse?: APIPlayerHouse | null;
    constructor(client: Client, data: APIClanMember);
    /** Whether this clan member is in the clan. */
    get isMember(): boolean;
    /** Whether this clan member is an Elder. */
    get isElder(): boolean;
    /** Whether this clan member is a Co-Leader. */
    get isCoLeader(): boolean;
    /** Whether this clan member is a Leader. */
    get isLeader(): boolean;
    /** Fetch detailed clan info for the member's clan. */
    fetch(options?: OverrideOptions): Promise<import("./Player").Player>;
}
